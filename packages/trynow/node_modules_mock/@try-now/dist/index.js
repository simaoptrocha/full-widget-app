var scriptLoadingStatus = {
    isLoading: false,
    isLoaded: false,
  };
  
  async function loadCustomWidget(version = "v1") {
    return new Promise((resolve, reject) => {
      // Replace with your own hosted script URL
      const scriptSrc = `https://your-domain.com/widgets/${version}/custom-widget.js`;
      const existingScript = document.querySelector(`script[src="${scriptSrc}"]`);
      scriptLoadingStatus.isLoading = true;
  
      const checkLoaded = (count = 0) => {
        if (window.SimpleWidget) {
          scriptLoadingStatus.isLoading = false;
          scriptLoadingStatus.isLoaded = true;
          resolve(window.SimpleWidget);
          return;
        }
        if (count > 100) {
          scriptLoadingStatus.isLoading = false;
          reject(new Error("Loading custom widget script timed out."));
          return;
        }
        setTimeout(() => checkLoaded(count + 1), 100);
      };
  
      if (existingScript) {
        checkLoaded();
      } else {
        const script = document.createElement("script");
        script.async = true;
        script.src = scriptSrc;
        script.addEventListener("load", () => {
          scriptLoadingStatus.isLoading = false;
          scriptLoadingStatus.isLoaded = true;
          if (window.SimpleWidget) {
            resolve(window.SimpleWidget);
          } else {
            reject(new Error("SimpleWidget is not available after script load."));
          }
        });
        script.addEventListener("error", () => {
          scriptLoadingStatus.isLoading = false;
          scriptLoadingStatus.isLoaded = false;
          reject(new Error("Failed to load custom widget script."));
        });
        document.body.appendChild(script);
      }
    });
  }
  
  export { loadCustomWidget };
  //# sourceMappingURL=index.js.map
  